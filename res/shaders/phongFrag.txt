#version 430

out vec4 outColor;
in vec4 vNormal;
in vec4 vPosition;

layout(location = 1)uniform mat4 view;

void main()
{
	vec4 lDir = normalize(vec4(-1,-1,-1,0));
	vec4 camPos = inverse(view)[3]; // -view[3] set w to 1 
	float specPower = 15.0f;

	vec4 la = vec4(0,.4,.4,1); 
	vec4 ld = vec4(1,1,1,1); 
	vec4 ls = vec4(1,1,1,1);					//ambient, diffuse, specular (light)
	vec4 sa = vec4(.4,.4,.4,1);
	vec4 sd = vec4(0,0,0,1);
	vec4 ss = vec4(1,0,0,1);					//a,d,s surface

	vec4 R = reflect(lDir, vNormal);	//light dir
	vec4 E = normalize(camPos - vPosition); //eye dir


	float lamb = max(0.0f,-dot(vNormal, lDir));
	float spec = pow( max(0.0f,dot(R,E)), specPower);

	vec4 ambient = la * sa;
	vec4 diffuse = ld * lamb * sd;
	vec4 specular = ls * spec * ss;

	outColor = ambient + diffuse + specular;
}